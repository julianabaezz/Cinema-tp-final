{"ast":null,"code":"import { api_movies } from \"../utils\";\nimport { api_DB } from \"../utils\";\nimport { mapToArray } from \"../helpers\";\n\nconst getItemsTMDB = async () => {\n  const response = await api_movies.get(`movie/top_rated?`);\n  return response.data.results;\n};\n\nconst searchMulti = async _ref => {\n  var _response;\n\n  let {\n    page,\n    search\n  } = _ref;\n  let response;\n\n  if (search) {\n    response = await api_movies.get(`search/multi?query=${search} &page=${page}`);\n  } else {\n    response = await api_movies.get(`movie/top_rated?`);\n  }\n\n  return (_response = response) === null || _response === void 0 ? void 0 : _response.data;\n};\n\nconst addItemFB = async payload => {\n  await api_DB.post('/items.json', payload);\n};\n\nconst getItemsFB = async () => {\n  const response = await api_DB.get('/items.json');\n  return mapToArray(response.data);\n};\n\nconst deleteItemFB = async id => {\n  const response = await getItemsFB();\n  const foundItem = response.find(item => item.id === id);\n  api_DB.post(`/items/${foundItem === null || foundItem === void 0 ? void 0 : foundItem.idDB}.json`);\n};\n\nexport const itemsApi = {\n  getItemsTMDB,\n  searchMulti,\n  addItemFB,\n  getItemsFB\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/ProgramaciÃ³n/Clases Ada/proyectos/TP FINAL/cinemada/src/api/moviesDB.ts"],"names":["api_movies","api_DB","mapToArray","getItemsTMDB","response","get","data","results","searchMulti","page","search","addItemFB","payload","post","getItemsFB","deleteItemFB","id","foundItem","find","item","idDB","itemsApi"],"mappings":"AACA,SAASA,UAAT,QAA2B,UAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,YAAY,GAAG,YAAU;AACvB,QAAMC,QAAQ,GAAG,MAAMJ,UAAU,CAACK,GAAX,CAAgB,kBAAhB,CAAvB;AACA,SAAQD,QAAQ,CAACE,IAAT,CAAcC,OAAtB;AACH,CAHL;;AAKA,MAAMC,WAAW,GAAG,cAAqD;AAAA;;AAAA,MAA/C;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAA+C;AACrE,MAAIN,QAAJ;;AACA,MAAGM,MAAH,EAAU;AACNN,IAAAA,QAAQ,GAAG,MAAMJ,UAAU,CAACK,GAAX,CAAgB,sBAAqBK,MAAO,UAASD,IAAK,EAA1D,CAAjB;AACH,GAFD,MAGI;AACAL,IAAAA,QAAQ,GAAG,MAAMJ,UAAU,CAACK,GAAX,CAAgB,kBAAhB,CAAjB;AACH;;AACD,sBAAOD,QAAP,8CAAO,UAAUE,IAAjB;AACH,CATD;;AAWA,MAAMK,SAAS,GAAG,MAAOC,OAAP,IAAwB;AACtC,QAAMX,MAAM,CAACY,IAAP,CAAY,aAAZ,EAA2BD,OAA3B,CAAN;AAEH,CAHD;;AAKA,MAAME,UAAU,GAAG,YAA4B;AAC3C,QAAMV,QAAQ,GAAG,MAAMH,MAAM,CAACI,GAAP,CAAW,aAAX,CAAvB;AACA,SAAOH,UAAU,CAACE,QAAQ,CAACE,IAAV,CAAjB;AACH,CAHD;;AAIA,MAAMS,YAAY,GAAG,MAAOC,EAAP,IAAoB;AACrC,QAAMZ,QAAQ,GAAG,MAAMU,UAAU,EAAjC;AACA,QAAMG,SAAS,GAAGb,QAAQ,CAACc,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAApC,CAAlB;AACAf,EAAAA,MAAM,CAACY,IAAP,CAAa,UAASI,SAAV,aAAUA,SAAV,uBAAUA,SAAS,CAAEG,IAAK,OAAtC;AAEH,CALD;;AASA,OAAO,MAAMC,QAAQ,GAAG;AAAClB,EAAAA,YAAD;AAAeK,EAAAA,WAAf;AAA4BG,EAAAA,SAA5B;AAAuCG,EAAAA;AAAvC,CAAjB","sourcesContent":["import { ApiResponse, Filter, Items } from \"../types/models\";\r\nimport { api_movies } from \"../utils\";\r\nimport { api_DB } from \"../utils\";\r\nimport { mapToArray } from \"../helpers\";\r\n\r\nconst getItemsTMDB = async() =>{     \r\n        const response = await api_movies.get(`movie/top_rated?`);\r\n        return (response.data.results)\r\n    }\r\n\r\nconst searchMulti = async({page, search}:Filter): Promise<ApiResponse> =>{\r\n    let response\r\n    if(search){\r\n        response = await api_movies.get(`search/multi?query=${search} &page=${page}`)\r\n    } \r\n    else{\r\n        response = await api_movies.get(`movie/top_rated?`);\r\n    }\r\n    return response?.data\r\n}\r\n\r\nconst addItemFB = async (payload:Items) =>{\r\n    await api_DB.post('/items.json', payload)\r\n    \r\n}\r\n\r\nconst getItemsFB = async ():Promise<Items[]> =>{\r\n    const response = await api_DB.get('/items.json');\r\n    return mapToArray(response.data);\r\n}\r\nconst deleteItemFB = async (id:number) =>{\r\n    const response = await getItemsFB()\r\n    const foundItem = response.find((item) => item.id === id)\r\n    api_DB.post(`/items/${foundItem?.idDB}.json`)\r\n    \r\n}\r\n\r\n\r\n\r\nexport const itemsApi = {getItemsTMDB, searchMulti, addItemFB, getItemsFB}"]},"metadata":{},"sourceType":"module"}