{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Programaci\\xF3n\\\\Clases Ada\\\\proyectos\\\\TP FINAL\\\\cinemada\\\\src\\\\hoc\\\\WithAuth\\\\index.tsx\";\n// import { UsersContext } from \"../../contexts\";\nimport { useAuth } from \"../../hooks/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//Verifico si existe una sesión activa y en caso de no existir carga la pagina de Login.\n//Si hay un usuario en sesión entonces se carga el componente actual o, si vengo de logiin o sign up, tengo que\n//enviar a la pagina principal,\nconst publicRoutes = ['./login', './signup'];\n\nconst withAuth = Component => {\n  var _s = $RefreshSig$();\n\n  const Authenticated = () => {\n    _s();\n\n    const {\n      push,\n      location\n    } = useHistory();\n    const {\n      hasUserLoggedIn\n    } = useAuth(); // const {currentUser} = useContext(UsersContext)\n    // if(hasUserLoggedIn === undefined) return <Loading/>;\n\n    if (hasUserLoggedIn && publicRoutes.includes(location.pathname)) push(\"/\");\n    if (hasUserLoggedIn === false && !publicRoutes.includes(location.pathname)) push(\"/login\");\n    return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  };\n\n  _s(Authenticated, \"rtjPvYG08awYK95Wc0agLSowZd8=\", false, function () {\n    return [useHistory, useAuth];\n  });\n\n  return Authenticated;\n};\n\nexport { withAuth };","map":{"version":3,"sources":["C:/Users/User/Desktop/Programación/Clases Ada/proyectos/TP FINAL/cinemada/src/hoc/WithAuth/index.tsx"],"names":["useAuth","useHistory","publicRoutes","withAuth","Component","Authenticated","push","location","hasUserLoggedIn","includes","pathname"],"mappings":";AACA;AACA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAIA;AACA;AACA;AAGA,MAAMC,YAAY,GAAG,CACjB,SADiB,EAEjB,UAFiB,CAArB;;AAQA,MAAMC,QAA8B,GAAIC,SAAD,IAAc;AAAA;;AAEjD,QAAMC,aAAgB,GAAG,MAAyB;AAAA;;AAC9C,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAmBN,UAAU,EAAnC;AACA,UAAM;AAACO,MAAAA;AAAD,QAAoBR,OAAO,EAAjC,CAF8C,CAI9C;AAEA;;AAEA,QAAIQ,eAAe,IAAIN,YAAY,CAACO,QAAb,CAAsBF,QAAQ,CAACG,QAA/B,CAAvB,EAAiEJ,IAAI,CAAE,GAAF,CAAJ;AAEjE,QAAIE,eAAe,KAAK,KAApB,IAA6B,CAACN,YAAY,CAACO,QAAb,CAAsBF,QAAQ,CAACG,QAA/B,CAAlC,EAA4EJ,IAAI,CAAE,QAAF,CAAJ;AAG5E,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAdD;;AAFiD,KAE3CD,aAF2C;AAAA,YAGpBJ,UAHoB,EAInBD,OAJmB;AAAA;;AAiBjD,SAAOK,aAAP;AACH,CAlBD;;AAmBA,SAAQF,QAAR","sourcesContent":["import { FC } from \"react\"\r\n// import { UsersContext } from \"../../contexts\";\r\nimport { useAuth } from \"../../hooks/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Login } from \"../../pages\";\r\nimport { Loading } from \"../../common\";\r\n\r\n//Verifico si existe una sesión activa y en caso de no existir carga la pagina de Login.\r\n//Si hay un usuario en sesión entonces se carga el componente actual o, si vengo de logiin o sign up, tengo que\r\n//enviar a la pagina principal,\r\n\r\n\r\nconst publicRoutes = [\r\n    './login',\r\n    './signup'\r\n]\r\n\r\n\r\ntype WithAuthenticationFn = (Component:FC) => FC;\r\n\r\nconst withAuth: WithAuthenticationFn = (Component) =>{\r\n    \r\n    const Authenticated:FC = (): JSX.Element | null =>{\r\n        const {push, location} = useHistory()\r\n        const {hasUserLoggedIn} = useAuth()\r\n        \r\n        // const {currentUser} = useContext(UsersContext)\r\n        \r\n        // if(hasUserLoggedIn === undefined) return <Loading/>;\r\n\r\n        if (hasUserLoggedIn && publicRoutes.includes(location.pathname)) push (\"/\");\r\n\r\n        if (hasUserLoggedIn === false && !publicRoutes.includes(location.pathname)) push (\"/login\");\r\n            \r\n        \r\n        return <Component/>\r\n    }\r\n    return Authenticated\r\n}\r\nexport {withAuth}"]},"metadata":{},"sourceType":"module"}