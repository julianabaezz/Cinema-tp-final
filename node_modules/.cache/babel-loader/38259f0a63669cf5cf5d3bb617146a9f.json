{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { mapToArray } from \"../../helpers\";\nimport { api_users } from \"../../utils\"; // import {useUsers} from \"../useUsers\"\n\nconst setUserToken = async user => {\n  const newToken = Math.random().toString(36).substring(2);\n  await api_users.patch(`/users/${user.id}.json`, {\n    sessionToken: newToken\n  });\n};\n\nconst useAuth = () => {\n  _s();\n\n  // const [userSession, setUserSession] = useState<User>(\n  //     JSON.parse(localStorage.getItem(\"user\")!)\n  // )\n  const {\n    push\n  } = useHistory();\n  useEffect(() => {\n    console.log(\"Estoy pasando por useAuth\");\n  }, []);\n\n  const login = async payload => {\n    try {\n      const response = await api_users.get(\"/users.json\");\n      const users = mapToArray(response.data);\n      const loggedUser = users.find(user => user.email === payload.email && user.password === payload.password);\n\n      if (loggedUser) {\n        setUserToken(loggedUser);\n        console.log(loggedUser);\n        push(\"/\");\n        return loggedUser;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return {\n    login\n  };\n};\n\n_s(useAuth, \"uBDI7a4mpBgNOdcNScdX76G8kos=\", false, function () {\n  return [useHistory];\n});\n\nexport { useAuth };","map":{"version":3,"sources":["C:/Users/User/Desktop/ProgramaciÃ³n/Clases Ada/proyectos/TP FINAL/cinemada/src/hooks/auth/index.ts"],"names":["useEffect","useHistory","mapToArray","api_users","setUserToken","user","newToken","Math","random","toString","substring","patch","id","sessionToken","useAuth","push","console","log","login","payload","response","get","users","data","loggedUser","find","email","password","e"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AAEA,MAAMC,YAAY,GAAG,MAAOC,IAAP,IAAqB;AAEtC,QAAMC,QAAQ,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAjB;AACA,QAAMP,SAAS,CAACQ,KAAV,CAAiB,UAASN,IAAI,CAACO,EAAG,OAAlC,EAA0C;AAACC,IAAAA,YAAY,EAAEP;AAAf,GAA1C,CAAN;AACH,CAJD;;AAMA,MAAMQ,OAAO,GAAG,MAAK;AAAA;;AAEjB;AACA;AACA;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAWd,UAAU,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXgB,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;;AAOA,QAAMC,KAAK,GAAG,MAAOC,OAAP,IAA+B;AACrC,QAAG;AAEC,YAAMC,QAAQ,GAAG,MAAMjB,SAAS,CAACkB,GAAV,CAAc,aAAd,CAAvB;AACA,YAAMC,KAAa,GAAGpB,UAAU,CAACkB,QAAQ,CAACG,IAAV,CAAhC;AACA,YAAMC,UAAU,GAAGF,KAAK,CAACG,IAAN,CAAYpB,IAAD,IAC1BA,IAAI,CAACqB,KAAL,KAAeP,OAAO,CAACO,KAAvB,IAAgCrB,IAAI,CAACsB,QAAL,KAAkBR,OAAO,CAACQ,QAD3C,CAAnB;;AAGA,UAAIH,UAAJ,EAAgB;AACZpB,QAAAA,YAAY,CAACoB,UAAD,CAAZ;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ;AACAT,QAAAA,IAAI,CAAC,GAAD,CAAJ;AACA,eAAOS,UAAP;AACC,OALL,MAKU;AAEF,eAAO,KAAP;AAEH;AACR,KAjBD,CAkBA,OAAOI,CAAP,EAAS;AACLZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACH;AAKJ,GA1BL;;AA2BI,SAAM;AAACV,IAAAA;AAAD,GAAN;AAGP,CA9CD;;GAAMJ,O;UAOeb,U;;;AA0CrB,SAAQa,OAAR","sourcesContent":["// import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { mapToArray } from \"../../helpers\";\r\nimport { LogUserType, User } from \"../../types/models\"\r\nimport { api_users } from \"../../utils\"\r\n// import {useUsers} from \"../useUsers\"\r\n\r\nconst setUserToken = async (user: User) =>{\r\n\r\n    const newToken = Math.random().toString(36).substring(2)\r\n    await api_users.patch(`/users/${user.id}.json`, {sessionToken: newToken})\r\n}\r\n\r\nconst useAuth = () =>{\r\n\r\n    // const [userSession, setUserSession] = useState<User>(\r\n    //     JSON.parse(localStorage.getItem(\"user\")!)\r\n    // )\r\n\r\n    \r\n    const { push } = useHistory()\r\n\r\n    useEffect(() =>{\r\n        console.log(\"Estoy pasando por useAuth\")\r\n    }, []);\r\n    \r\n\r\n    \r\n    \r\n    const login = async (payload: LogUserType) =>{\r\n            try{\r\n\r\n                const response = await api_users.get(\"/users.json\");\r\n                const users: User[] = mapToArray(response.data);\r\n                const loggedUser = users.find((user) => \r\n                    user.email === payload.email && user.password === payload.password)\r\n                    \r\n                if (loggedUser) {                \r\n                    setUserToken(loggedUser)\r\n                    console.log(loggedUser)   \r\n                    push(\"/\") \r\n                    return loggedUser\r\n                    } else{\r\n                    \r\n                        return false \r\n    \r\n                    }\r\n            }\r\n            catch (e){\r\n                console.log(e)\r\n            }\r\n\r\n            \r\n            \r\n    \r\n        }\r\n        return{login}\r\n    \r\n    \r\n}\r\n\r\n\r\nexport{ useAuth }"]},"metadata":{},"sourceType":"module"}