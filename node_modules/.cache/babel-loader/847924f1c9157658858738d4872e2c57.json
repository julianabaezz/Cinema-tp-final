{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UsersContext } from \"../../contexts\";\nimport { mapToArray } from \"../../helpers\";\nimport { api_users } from \"../../utils\"; // import {useUsers} from \"../useUsers\"\n\nconst createUserToken = async user => {\n  const newToken = Math.random().toString(36).substring(2);\n\n  try {\n    await api_users.patch(`/users/${user.id}.json`, {\n      sessionToken: newToken\n    });\n    return newToken;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst useAuth = () => {\n  _s();\n\n  // const [userSession, setUserSession] = useState<User>(\n  //     JSON.parse(localStorage.getItem(\"user\")!)\n  // )\n  const [hasUserLoggedIn, setHasUserLoggedIn] = useState(false);\n  const [tokenStorage, setTokenStorage] = useState(localStorage.getItem(\"cinemada-token\") || undefined);\n  const {\n    setCurrentUser\n  } = useContext(UsersContext);\n  useEffect(() => {\n    tokenStorage && localStorage.setItem(\"cinemada-token\", tokenStorage);\n    console.log(\"Estoy pasando por useAuth\");\n  }, [tokenStorage]);\n  useEffect(() => {\n    if (tokenStorage) loginWithToken();\n  }, []);\n  const {\n    push\n  } = useHistory();\n\n  const login = async payload => {\n    try {\n      const response = await api_users.get(\"/users.json\");\n      const users = mapToArray(response.data);\n      const loggedUser = users.find(user => user.email === payload.email && user.password === payload.password);\n\n      if (loggedUser) {\n        const token = await createUserToken(loggedUser); // return loggedUser\n\n        if (token) {\n          // console.log(loggedUser)\n          setTokenStorage(token);\n          setCurrentUser === null || setCurrentUser === void 0 ? void 0 : setCurrentUser(loggedUser);\n          setHasUserLoggedIn(true);\n          push(\"/\");\n        } else {\n          throw new Error(\"El usuario no existe\");\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const loginWithToken = async () => {\n    console.log(tokenStorage);\n\n    try {\n      const response = await api_users.get(\"/users.json\");\n      const users = mapToArray(response.data);\n      const loggedUser = users.find(user => user.sessionToken === tokenStorage);\n\n      if (loggedUser) {\n        setCurrentUser === null || setCurrentUser === void 0 ? void 0 : setCurrentUser(loggedUser);\n        setHasUserLoggedIn(true);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return {\n    login,\n    loginWithToken,\n    hasUserLoggedIn\n  };\n};\n\n_s(useAuth, \"TEWHstRicG5kHvJttOIusJ3csV8=\", false, function () {\n  return [useHistory];\n});\n\nexport { useAuth };","map":{"version":3,"sources":["C:/Users/User/Desktop/ProgramaciÃ³n/Clases Ada/proyectos/TP FINAL/cinemada/src/hooks/auth/index.ts"],"names":["useContext","useState","useEffect","useHistory","UsersContext","mapToArray","api_users","createUserToken","user","newToken","Math","random","toString","substring","patch","id","sessionToken","err","useAuth","hasUserLoggedIn","setHasUserLoggedIn","tokenStorage","setTokenStorage","localStorage","getItem","undefined","setCurrentUser","setItem","console","log","loginWithToken","push","login","payload","response","get","users","data","loggedUser","find","email","password","token","Error","e"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UsersContext } from \"../../contexts\";\r\nimport { mapToArray } from \"../../helpers\";\r\nimport { LogUserType, User } from \"../../types/models\";\r\nimport { api_users } from \"../../utils\";\r\n// import {useUsers} from \"../useUsers\"\r\n\r\nconst createUserToken = async (user: User) => {\r\n    const newToken = Math.random().toString(36).substring(2);\r\n    try {\r\n        await api_users.patch(`/users/${user.id}.json`, { sessionToken: newToken });\r\n        return newToken;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n};\r\n\r\n\r\nconst useAuth = () => {\r\n    // const [userSession, setUserSession] = useState<User>(\r\n        //     JSON.parse(localStorage.getItem(\"user\")!)\r\n        // )\r\n    const [hasUserLoggedIn, setHasUserLoggedIn] = useState(false)\r\n\r\n    const [tokenStorage, setTokenStorage] = useState<string | undefined>(\r\n        localStorage.getItem(\"cinemada-token\") || undefined\r\n        );\r\n            \r\n    const { setCurrentUser } = useContext(UsersContext);\r\n            \r\n    useEffect(() => {\r\n        tokenStorage && localStorage.setItem(\"cinemada-token\", tokenStorage);\r\n        console.log(\"Estoy pasando por useAuth\");\r\n    }, [tokenStorage]);\r\n\r\n    useEffect(() =>{\r\n        if (tokenStorage) loginWithToken()\r\n    }, [])\r\n\r\n    const { push } = useHistory();\r\n\r\n    const login = async (payload: LogUserType) => {\r\n        try {\r\n            const response = await api_users.get(\"/users.json\");\r\n            const users: User[] = mapToArray(response.data);\r\n            const loggedUser = users.find(\r\n                (user) =>\r\n                    user.email === payload.email && user.password === payload.password\r\n            );\r\n\r\n            if (loggedUser) {\r\n                const token = await createUserToken(loggedUser);\r\n                // return loggedUser\r\n                if (token) {\r\n                    // console.log(loggedUser)\r\n                    setTokenStorage(token);\r\n                    setCurrentUser?.(loggedUser);\r\n                    setHasUserLoggedIn(true)\r\n                    push(\"/\");\r\n                } else {\r\n                    throw new Error(\"El usuario no existe\");\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const loginWithToken = async() => {\r\n        console.log(tokenStorage);\r\n        try {\r\n            const response = await api_users.get(\"/users.json\");\r\n            const users: User[] = mapToArray(response.data);\r\n            const loggedUser = users.find(\r\n                (user) => user.sessionToken === tokenStorage\r\n            );\r\n\r\n            if (loggedUser) {\r\n                setCurrentUser?.(loggedUser);\r\n                setHasUserLoggedIn(true)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    return { login, loginWithToken, hasUserLoggedIn };\r\n};\r\n\r\nexport { useAuth };\r\n"]},"metadata":{},"sourceType":"module"}