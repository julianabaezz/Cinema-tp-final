{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UsersContext } from \"../../contexts\";\nimport { mapToArray } from \"../../helpers\";\nimport { api_users } from \"../../utils\"; // import {useUsers} from \"../useUsers\"\n\nconst useAuth = () => {\n  _s();\n\n  // const [userSession, setUserSession] = useState<User>(\n  //     JSON.parse(localStorage.getItem(\"user\")!)\n  // )\n  const [hasUserLoggedIn, setHasUserLoggedIn] = useState();\n  const [tokenStorage, setTokenStorage] = useState(localStorage.getItem(\"cinemada-token\") || undefined);\n  const {\n    setCurrentUser\n  } = useContext(UsersContext);\n  const {\n    push\n  } = useHistory();\n  useEffect(() => {\n    if (tokenStorage) localStorage.setItem(\"cinemada-token\", tokenStorage); // console.log(\"Estoy pasando por useAuth\");\n  }, [tokenStorage]);\n  useEffect(() => {\n    loginWithToken();\n  }, []);\n\n  const createUserToken = async user => {\n    const newToken = Math.random().toString(36).substring(2);\n\n    try {\n      await api_users.patch(`/users/${user.id}.json`, {\n        sessionToken: newToken\n      });\n      return newToken;\n    } catch (err) {\n      return null;\n    }\n  };\n\n  const login = async payload => {\n    try {\n      const response = await api_users.get(\"/users.json\");\n      const users = mapToArray(response.data);\n      const loggedUser = users.find(user => user.email === payload.email && user.password === payload.password);\n\n      if (loggedUser) {\n        const token = await createUserToken(loggedUser); // return loggedUser\n\n        if (token) {\n          // console.log(loggedUser)\n          setTokenStorage(token);\n          setCurrentUser === null || setCurrentUser === void 0 ? void 0 : setCurrentUser(loggedUser);\n          setHasUserLoggedIn(true);\n          push(\"/\");\n        } else {\n          throw new Error(\"El usuario no existe\");\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const loginWithToken = async () => {\n    console.log(tokenStorage);\n\n    try {\n      const response = await api_users.get(\"/users.json\");\n      const users = mapToArray(response.data);\n      const loggedUser = users.find(user => user.sessionToken === tokenStorage);\n\n      if (loggedUser) {\n        setCurrentUser === null || setCurrentUser === void 0 ? void 0 : setCurrentUser(loggedUser);\n        setHasUserLoggedIn(true);\n      } else {\n        setHasUserLoggedIn(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return {\n    login,\n    loginWithToken,\n    hasUserLoggedIn\n  };\n};\n\n_s(useAuth, \"/UdX2lziSw3n7AQ/yKzZyAVzfxU=\", false, function () {\n  return [useHistory];\n});\n\nexport { useAuth };","map":{"version":3,"sources":["C:/Users/User/Desktop/ProgramaciÃ³n/Clases Ada/proyectos/TP FINAL/cinemada/src/hooks/auth/index.ts"],"names":["useContext","useState","useEffect","useHistory","UsersContext","mapToArray","api_users","useAuth","hasUserLoggedIn","setHasUserLoggedIn","tokenStorage","setTokenStorage","localStorage","getItem","undefined","setCurrentUser","push","setItem","loginWithToken","createUserToken","user","newToken","Math","random","toString","substring","patch","id","sessionToken","err","login","payload","response","get","users","data","loggedUser","find","email","password","token","Error","e","console","log"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UsersContext } from \"../../contexts\";\r\nimport { mapToArray } from \"../../helpers\";\r\nimport { LogUserType, User } from \"../../types/models\";\r\nimport { api_users } from \"../../utils\";\r\n// import {useUsers} from \"../useUsers\"\r\n\r\n\r\nconst useAuth = () => {\r\n    // const [userSession, setUserSession] = useState<User>(\r\n        //     JSON.parse(localStorage.getItem(\"user\")!)\r\n        // )\r\n    const [hasUserLoggedIn, setHasUserLoggedIn] = useState<boolean>()\r\n\r\n    const [tokenStorage, setTokenStorage] = useState<string | undefined>(\r\n        localStorage.getItem(\"cinemada-token\") || undefined\r\n        );\r\n            \r\n    const { setCurrentUser } = useContext(UsersContext);\r\n    const { push } = useHistory();\r\n    \r\n    useEffect(() => {\r\n        if(tokenStorage)  localStorage.setItem(\"cinemada-token\", tokenStorage);\r\n        // console.log(\"Estoy pasando por useAuth\");\r\n    }, [tokenStorage]);\r\n\r\n    useEffect(() =>{\r\n        loginWithToken()\r\n    }, [])\r\n\r\n    const createUserToken = async (user: User) => {\r\n        const newToken = Math.random().toString(36).substring(2);\r\n        try {\r\n            await api_users.patch(`/users/${user.id}.json`, { sessionToken: newToken });\r\n            return newToken;\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const login = async (payload: LogUserType) => {\r\n        try {\r\n            const response = await api_users.get(\"/users.json\");\r\n            const users: User[] = mapToArray(response.data);\r\n            const loggedUser = users.find(\r\n                (user) =>\r\n                    user.email === payload.email && user.password === payload.password\r\n            );\r\n\r\n            if (loggedUser) {\r\n                const token = await createUserToken(loggedUser);\r\n                // return loggedUser\r\n                if (token) {\r\n                    // console.log(loggedUser)\r\n                    setTokenStorage(token);\r\n                    setCurrentUser?.(loggedUser);\r\n                    setHasUserLoggedIn(true)\r\n                    push(\"/\");\r\n                } else {\r\n                    throw new Error(\"El usuario no existe\");\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const loginWithToken = async() => {\r\n        console.log(tokenStorage);\r\n        try {\r\n            const response = await api_users.get(\"/users.json\");\r\n            const users: User[] = mapToArray(response.data);\r\n            const loggedUser = users.find(\r\n                (user) => user.sessionToken === tokenStorage\r\n            );\r\n\r\n            if (loggedUser) {\r\n                setCurrentUser?.(loggedUser);\r\n                setHasUserLoggedIn(true)\r\n            }\r\n            else{\r\n                setHasUserLoggedIn(false)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    return { login, loginWithToken, hasUserLoggedIn };\r\n};\r\n\r\nexport { useAuth };\r\n"]},"metadata":{},"sourceType":"module"}