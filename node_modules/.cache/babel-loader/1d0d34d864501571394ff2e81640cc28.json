{"ast":null,"code":"// import { UsersContext } from \"../../contexts\";\nimport{useAuth}from\"../../hooks/auth\";import{useHistory}from\"react-router-dom\";// import { Login } from \"../../pages\";\nimport{Loading}from\"../../common\";//Verifico si existe una sesión activa y en caso de no existir carga la pagina de Login.\n//Si hay un usuario en sesión entonces se carga el componente actual o, si vengo de logiin o sign up, tengo que\n//enviar a la pagina principal,\nimport{jsx as _jsx}from\"react/jsx-runtime\";var publicRoutes=[\"/login\",\"/signup\"];var withAuth=function withAuth(Component){var Authenticated=function Authenticated(){var _useHistory=useHistory(),location=_useHistory.location,push=_useHistory.push;var _useAuth=useAuth(),hasUserLoggedIn=_useAuth.hasUserLoggedIn;// const {currentUser} = useContext(UsersContext)\nif(hasUserLoggedIn===undefined)return/*#__PURE__*/_jsx(Loading,{});if(hasUserLoggedIn===false&&!publicRoutes.includes(location.pathname))push(\"/login\");if(hasUserLoggedIn&&publicRoutes.includes(location.pathname))push(\"/\");return/*#__PURE__*/_jsx(Component,{});};return Authenticated;};export{withAuth};","map":{"version":3,"sources":["C:/Users/User/Desktop/Programación/Clases Ada/proyectos/TP FINAL/cinemada/src/hoc/WithAuth/index.tsx"],"names":["useAuth","useHistory","Loading","publicRoutes","withAuth","Component","Authenticated","location","push","hasUserLoggedIn","undefined","includes","pathname"],"mappings":"AACA;AACA,OAASA,OAAT,KAAwB,kBAAxB,CACA,OAAmBC,UAAnB,KAAuC,kBAAvC,CACA;AACA,OAASC,OAAT,KAAwB,cAAxB,CAEA;AACA;AACA;2CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjB,QADiB,CAEjB,SAFiB,CAArB,CAQA,GAAMC,CAAAA,QAA8B,CAAG,QAAjCA,CAAAA,QAAiC,CAACC,SAAD,CAAc,CAEjD,GAAMC,CAAAA,aAAgB,CAAG,QAAnBA,CAAAA,aAAmB,EAAyB,CAC9C,gBAAyBL,UAAU,EAAnC,CAAOM,QAAP,aAAOA,QAAP,CAAiBC,IAAjB,aAAiBA,IAAjB,CACA,aAA0BR,OAAO,EAAjC,CAAOS,eAAP,UAAOA,eAAP,CAEA;AAEA,GAAGA,eAAe,GAAKC,SAAvB,CAAkC,mBAAO,KAAC,OAAD,IAAP,CAElC,GAAID,eAAe,GAAK,KAApB,EAA6B,CAACN,YAAY,CAACQ,QAAb,CAAsBJ,QAAQ,CAACK,QAA/B,CAAlC,CAA4EJ,IAAI,CAAC,QAAD,CAAJ,CAE5E,GAAIC,eAAe,EAAIN,YAAY,CAACQ,QAAb,CAAsBJ,QAAQ,CAACK,QAA/B,CAAvB,CAAiEJ,IAAI,CAAC,GAAD,CAAJ,CAIjE,mBAAO,KAAC,SAAD,IAAP,CACH,CAfD,CAgBA,MAAOF,CAAAA,aAAP,CACH,CAnBD,CAoBA,OAAQF,QAAR","sourcesContent":["import { FC } from \"react\"\r\n// import { UsersContext } from \"../../contexts\";\r\nimport { useAuth } from \"../../hooks/auth\";\r\nimport { Redirect, useHistory,  } from \"react-router-dom\";\r\n// import { Login } from \"../../pages\";\r\nimport { Loading } from \"../../common\";\r\n\r\n//Verifico si existe una sesión activa y en caso de no existir carga la pagina de Login.\r\n//Si hay un usuario en sesión entonces se carga el componente actual o, si vengo de logiin o sign up, tengo que\r\n//enviar a la pagina principal,\r\n\r\n\r\nconst publicRoutes = [\r\n    \"/login\",\r\n    \"/signup\"\r\n]\r\n\r\n\r\ntype WithAuthenticationFn = (Component:FC) => FC;\r\n\r\nconst withAuth: WithAuthenticationFn = (Component) =>{\r\n    \r\n    const Authenticated:FC = (): JSX.Element | null =>{\r\n        const {location, push} = useHistory()\r\n        const {hasUserLoggedIn} = useAuth()\r\n        \r\n        // const {currentUser} = useContext(UsersContext)\r\n        \r\n        if(hasUserLoggedIn === undefined) return <Loading/>;\r\n\r\n        if (hasUserLoggedIn === false && !publicRoutes.includes(location.pathname)) push(\"/login\");\r\n        \r\n        if (hasUserLoggedIn && publicRoutes.includes(location.pathname)) push(\"/\");\r\n\r\n            \r\n        \r\n        return <Component/>\r\n    }\r\n    return Authenticated\r\n}\r\nexport {withAuth}"]},"metadata":{},"sourceType":"module"}