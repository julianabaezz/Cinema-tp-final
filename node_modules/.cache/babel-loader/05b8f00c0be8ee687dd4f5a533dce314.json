{"ast":null,"code":"// import { useState } from \"react\";\nimport { mapToArray } from \"../../helpers\";\nimport { api_users } from \"../../utils\"; // import {useUsers} from \"../useUsers\"\n\nconst useAuth = () => {// const [userSession, setUserSession] = useState<User>(\n  //     JSON.parse(localStorage.getItem(\"user\")!)\n  // )\n};\n\nconst login = async payload => {\n  const response = await api_users.get(\"/users.json\");\n  const users = mapToArray(response.data);\n  return users.find(user => {\n    if (user.email === payload.email && user.password === payload.password) return user;\n  });\n};\n\nexport { useAuth, login };","map":{"version":3,"sources":["C:/Users/User/Desktop/ProgramaciÃ³n/Clases Ada/proyectos/TP FINAL/cinemada/src/hooks/auth/index.ts"],"names":["mapToArray","api_users","useAuth","login","payload","response","get","users","data","find","user","email","password"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AAEA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AAEA,MAAMC,OAAO,GAAG,MAAK,CAEjB;AACA;AACA;AAUH,CAdD;;AAeA,MAAMC,KAAK,GAAG,MAAOC,OAAP,IAA+B;AACrC,QAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,GAAV,CAAc,aAAd,CAAvB;AACA,QAAMC,KAAa,GAAGP,UAAU,CAACK,QAAQ,CAACG,IAAV,CAAhC;AACA,SAAOD,KAAK,CAACE,IAAN,CAAYC,IAAD,IAAS;AACvB,QAAGA,IAAI,CAACC,KAAL,KAAaP,OAAO,CAACO,KAArB,IAA8BD,IAAI,CAACE,QAAL,KAAiBR,OAAO,CAACQ,QAA1D,EACA,OAAOF,IAAP;AACH,GAHM,CAAP;AAMH,CATL;;AAYA,SAAQR,OAAR,EAAiBC,KAAjB","sourcesContent":["// import { useState } from \"react\";\r\nimport { mapToArray } from \"../../helpers\";\r\nimport { LogUserType, User } from \"../../types/models\"\r\nimport { api_users } from \"../../utils\"\r\n// import {useUsers} from \"../useUsers\"\r\n\r\nconst useAuth = () =>{\r\n\r\n    // const [userSession, setUserSession] = useState<User>(\r\n    //     JSON.parse(localStorage.getItem(\"user\")!)\r\n    // )\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n}\r\nconst login = async (payload: LogUserType) =>{\r\n        const response = await api_users.get(\"/users.json\");\r\n        const users: User[] = mapToArray(response.data);\r\n        return users.find((user) =>{\r\n            if(user.email===payload.email && user.password ===payload.password)\r\n            return user            \r\n        })\r\n            \r\n\r\n    }\r\n\r\n\r\nexport{ useAuth, login }"]},"metadata":{},"sourceType":"module"}