{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { itemsApi } from \"../../api/moviesDB\";\nimport { api_DB } from \"../../utils\";\nimport { useAuth } from \"../auth\";\n\nconst useItems = () => {\n  _s();\n\n  const params = new URLSearchParams(window.location.search);\n  const page = Number(params.get(\"page\")) || 1;\n  const search = params.get(\"search\") || undefined;\n  const {\n    push\n  } = useHistory();\n  const [items, setItems] = useState();\n  const {\n    loginWithToken\n  } = useAuth(); //SEARCH MULTI\n\n  useEffect(() => {\n    itemsApi.searchMulti({\n      page,\n      search\n    }).then(response => setItems(response));\n  }, [page, search]); //PAGE PARAMS\n\n  const setPageParams = page => {\n    params.set(\"page\", page.toString());\n    push(`${window.location.pathname}?${params.toString()}`);\n  }; //SEARCH PARAMS\n\n\n  const setSearchParams = input => {\n    params.set(\"search\", input);\n    push(`${window.location.pathname}?${params.toString()}`);\n  }; //USE ITEMS FB\n\n\n  const getItems = async () => {\n    const response = await itemsApi.getItemsFB();\n    return response;\n  };\n\n  const addItem = async datos => {\n    await itemsApi.addItemFB(datos);\n    getItems();\n  };\n\n  const deleteItem = async id => {\n    await itemsApi.deleteItemFB(id);\n    getItems();\n  };\n\n  const [itemDetail, setDetail] = useState();\n\n  const getDetail = async id => {\n    await itemsApi.getItemFB(id).then(response => {\n      setDetail(response);\n    });\n  };\n\n  const [itemsFB, setItemsFB] = useState();\n\n  const displayItemsFB = async () => {\n    await getItems().then(response => {\n      setItemsFB(response);\n    });\n  }; //ITEM VIEWED\n\n\n  const addItemViewed = async (currentUser, item) => {\n    const itemsViewed = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.viewed) || [];\n    itemsViewed.push(item);\n    await api_DB.patch(`/users/${currentUser === null || currentUser === void 0 ? void 0 : currentUser.idDB}.json`, {\n      viewed: itemsViewed\n    });\n    loginWithToken();\n  };\n\n  const deleteItemViewed = async (currentUser, item) => {\n    var _currentUser$viewed;\n\n    const itemsViewed = currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$viewed = currentUser.viewed) === null || _currentUser$viewed === void 0 ? void 0 : _currentUser$viewed.filter(i => i !== item);\n    await api_DB.patch(`/users/${currentUser === null || currentUser === void 0 ? void 0 : currentUser.idDB}.json`, {\n      viewed: itemsViewed\n    });\n    loginWithToken();\n  };\n\n  const itemsViewed = (currentUser, id) => {\n    var _currentUser$viewed2;\n\n    const itemViewed = currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$viewed2 = currentUser.viewed) === null || _currentUser$viewed2 === void 0 ? void 0 : _currentUser$viewed2.includes(id);\n    return itemViewed;\n  };\n\n  return {\n    addItem,\n    deleteItem,\n    getItems,\n    getDetail,\n    setDetail,\n    displayItemsFB,\n    setPageParams,\n    setSearchParams,\n    addItemViewed,\n    deleteItemViewed,\n    itemsViewed,\n    items,\n    itemDetail,\n    itemsFB,\n    page\n  };\n};\n\n_s(useItems, \"Enai0KVanHRwpRDpj08J6IeBbQA=\", false, function () {\n  return [useHistory, useAuth];\n});\n\nexport { useItems };","map":{"version":3,"sources":["C:/Users/User/Desktop/ProgramaciÃ³n/Clases Ada/proyectos/TP FINAL/cinemada/src/hooks/useItems/index.ts"],"names":["useEffect","useState","useHistory","itemsApi","api_DB","useAuth","useItems","params","URLSearchParams","window","location","search","page","Number","get","undefined","push","items","setItems","loginWithToken","searchMulti","then","response","setPageParams","set","toString","pathname","setSearchParams","input","getItems","getItemsFB","addItem","datos","addItemFB","deleteItem","id","deleteItemFB","itemDetail","setDetail","getDetail","getItemFB","itemsFB","setItemsFB","displayItemsFB","addItemViewed","currentUser","item","itemsViewed","viewed","patch","idDB","deleteItemViewed","filter","i","itemViewed","includes"],"mappings":"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","sourcesContent":["import { useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { itemsApi} from \"../../api/moviesDB\";\r\nimport { ApiResponse, Items, User } from \"../../types/models\";\r\nimport { api_DB } from \"../../utils\";\r\nimport {usersApi } from \"../../api/users\";\r\nimport {useAuth} from \"../auth\"\r\n\r\nconst useItems = () =>{\r\n    const params = new URLSearchParams(window.location.search)\r\n    const page = Number(params.get(\"page\")) || 1\r\n    const search = params.get(\"search\") || undefined\r\n    const {push} = useHistory()\r\n    const [items, setItems] = useState<ApiResponse>()\r\n    const{loginWithToken} =useAuth()\r\n\r\n    //SEARCH MULTI\r\n    useEffect(() => {\r\n        itemsApi\r\n        .searchMulti({page, search})\r\n        .then((response) => setItems(response))\r\n    }, [page, search])\r\n\r\n    //PAGE PARAMS\r\n    const setPageParams = (page: number) =>{\r\n        params.set(\"page\", page.toString())\r\n        push(`${window.location.pathname}?${params.toString()}`)        \r\n\r\n    }\r\n    //SEARCH PARAMS\r\n    const setSearchParams= (input: string) =>{\r\n        params.set(\"search\", input)\r\n        push(`${window.location.pathname}?${params.toString()}`)\r\n    }\r\n    //USE ITEMS FB\r\n    const getItems = async()=>{\r\n        const response = await itemsApi.getItemsFB();\r\n        return response\r\n        \r\n    }\r\n    const addItem= async(datos: Items) =>{        \r\n        await itemsApi.addItemFB(datos);\r\n        getItems()\r\n        \r\n    };\r\n\r\n    const deleteItem = async(id:number) =>{\r\n        await itemsApi.deleteItemFB(id)        \r\n        getItems()\r\n    }\r\n    const [itemDetail, setDetail] = useState<Items>()\r\n\r\n    const getDetail= async(id:string) =>{\r\n        await itemsApi.getItemFB(id).then((response) => { setDetail(response)})\r\n    }\r\n    const [itemsFB, setItemsFB] = useState<Items[]>()\r\n\r\n    const displayItemsFB = async() =>{\r\n        await getItems().then((response) => { setItemsFB(response)})\r\n    }\r\n    //ITEM VIEWED\r\n\r\n    const addItemViewed = async(currentUser: Partial<User | undefined>, item:number) =>{\r\n        const itemsViewed = currentUser?.viewed || [];\r\n        itemsViewed.push(item)\r\n        await api_DB.patch(`/users/${currentUser?.idDB}.json`, { viewed: itemsViewed})\r\n        loginWithToken()\r\n        \r\n    \r\n    }\r\n    const deleteItemViewed = async(currentUser: Partial<User | undefined>, item: number) =>{\r\n        const itemsViewed = currentUser?.viewed?.filter((i) => i !== item)\r\n        await api_DB.patch(`/users/${currentUser?.idDB}.json`, { viewed: itemsViewed})\r\n        loginWithToken()\r\n\r\n    }\r\n\r\n    const itemsViewed = (currentUser: Partial<User | undefined>, id: number) =>{\r\n        const itemViewed = currentUser?.viewed?.includes(id)\r\n        return itemViewed\r\n    }\r\n\r\n\r\nreturn {addItem, deleteItem, getItems, getDetail, setDetail, displayItemsFB, setPageParams, setSearchParams, addItemViewed, deleteItemViewed, itemsViewed, items, itemDetail, itemsFB, page }\r\n\r\n}\r\n\r\nexport {useItems}"]},"metadata":{},"sourceType":"module"}