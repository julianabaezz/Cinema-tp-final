{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Programaci\\xF3n\\\\Clases Ada\\\\proyectos\\\\TP FINAL\\\\cinemada\\\\src\\\\components\\\\parts\\\\UserCards\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\nimport { useItems } from \"../../../hooks/useItems\";\nimport { UsersContext } from \"../../../contexts\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserCards = () => {\n  _s();\n\n  const {\n    deleteItem,\n    displayItemsFB,\n    addItemViewed,\n    deleteItemViewed,\n    itemsViewed,\n    itemsFB\n  } = useItems();\n  const {\n    currentUser\n  } = useContext(UsersContext);\n  const [display, setDisplay] = useState();\n\n  const changeDisplay = () => {\n    display ? setDisplay(false) : setDisplay(true);\n  };\n\n  useEffect(() => {\n    displayItemsFB();\n  }, [display]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 5,\n      className: \"g-6\",\n      children: itemsFB === null || itemsFB === void 0 ? void 0 : itemsFB.map(item => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `http://image.tmdb.org/t/p/w500${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [item.media_type === 'tv' && /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), item.media_type !== 'tv' && /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" \", item.vote_average, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) !== 'admin' && /*#__PURE__*/_jsxDEV(Link, {\n            to: `/detail/${item.idDB}`,\n            className: \"warning\",\n            children: \"Detalle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'admin' && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => {\n                deleteItem(item.id);\n                changeDisplay();\n              },\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) !== 'admin' && !itemsViewed(currentUser, item.id) && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: () => addItemViewed(currentUser, item.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEye\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) !== 'admin' && itemsViewed(currentUser, item.id) && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: () => deleteItemViewed(currentUser, item.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEyeSlash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 118\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, item.idDB, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserCards, \"e1Q4P9tOEd5AbC70Btdfj9KknnY=\", false, function () {\n  return [useItems];\n});\n\n_c = UserCards;\nexport { UserCards };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCards\");","map":{"version":3,"sources":["C:/Users/User/Desktop/ProgramaciÃ³n/Clases Ada/proyectos/TP FINAL/cinemada/src/components/parts/UserCards/index.tsx"],"names":["FontAwesomeIcon","faEye","faEyeSlash","useContext","useEffect","useState","Card","Row","Col","Button","useItems","UsersContext","Link","UserCards","deleteItem","displayItemsFB","addItemViewed","deleteItemViewed","itemsViewed","itemsFB","currentUser","display","setDisplay","changeDisplay","map","item","poster_path","media_type","name","title","vote_average","role","idDB","id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useItems } from \"../../../hooks/useItems\";\r\nimport { UsersContext } from \"../../../contexts\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserCards: FC = () => {\r\n    const { deleteItem, displayItemsFB, addItemViewed, deleteItemViewed, itemsViewed, itemsFB } = useItems()\r\n    const { currentUser } = useContext(UsersContext)\r\n\r\n    const [display, setDisplay] = useState<boolean>()\r\n\r\n    const changeDisplay = () =>{\r\n        display ? setDisplay(false) : setDisplay(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        displayItemsFB()\r\n    }, [display])\r\n\r\n    return (\r\n        <div>\r\n            <Row xs={1} md={5} className=\"g-6\">\r\n\r\n                {itemsFB?.map((item) => (\r\n                    <Col key={item.idDB}>\r\n                        <Card>\r\n                            <Card.Img variant=\"top\" src={`http://image.tmdb.org/t/p/w500${item.poster_path}`} />\r\n                            <Card.Body>\r\n                                {item.media_type === 'tv' && (\r\n                                    <Card.Title>{item.name}</Card.Title>\r\n                                )}\r\n                                {item.media_type !== 'tv' && (\r\n                                    <Card.Title>{item.title}</Card.Title>\r\n                                )}\r\n                                <Card.Text> {item.vote_average} </Card.Text>\r\n                            </Card.Body>\r\n                                {currentUser?.role !== 'admin' && (\r\n                                \r\n                                    <Link to={`/detail/${item.idDB}`} className=\"warning\">Detalle</Link>\r\n                                \r\n                                )}\r\n                            <Card.Footer>\r\n                                {currentUser?.role === 'admin' && (\r\n                                    <Button variant=\"danger\" onClick={() => {deleteItem(item.id); changeDisplay()}}>Eliminar</Button>\r\n\r\n                                )}\r\n                                {currentUser?.role !== 'admin' && !itemsViewed(currentUser, item.id) &&\r\n\r\n                                    <Button variant=\"warning\" onClick={() => addItemViewed(currentUser, item.id)}><FontAwesomeIcon icon={faEye}></FontAwesomeIcon></Button>\r\n\r\n                                }\r\n                                {currentUser?.role !== 'admin' && itemsViewed(currentUser, item.id) &&\r\n\r\n                                    <Button variant=\"warning\" onClick={() => deleteItemViewed(currentUser, item.id)}><FontAwesomeIcon icon={faEyeSlash}></FontAwesomeIcon></Button>\r\n\r\n                                }\r\n\r\n\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n\r\n\r\n                )}\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport { UserCards }"]},"metadata":{},"sourceType":"module"}