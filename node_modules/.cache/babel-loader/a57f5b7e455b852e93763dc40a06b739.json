{"ast":null,"code":"import { api_DB } from \"../utils\";\nimport { mapToArray } from \"../helpers\";\n\nconst getUsers = async () => {\n  const response = await api_DB.get('/users.json');\n  return mapToArray(response.data);\n};\n\nconst addUser = async payload => {\n  await api_DB.post('/users.json', payload);\n};\n\nconst deleteUser = async id => {\n  const usersDB = await getUsers();\n  const userToDelete = usersDB.find(u => u.idDB === id);\n  await api_DB.delete(`users/${userToDelete === null || userToDelete === void 0 ? void 0 : userToDelete.idDB}.json`);\n};\n\nexport const usersApi = {\n  addUser,\n  getUsers,\n  deleteUser\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/Programaci√≥n/Clases Ada/proyectos/TP FINAL/cinemada/src/api/users.ts"],"names":["api_DB","mapToArray","getUsers","response","get","data","addUser","payload","post","deleteUser","id","usersDB","userToDelete","find","u","idDB","delete","usersApi"],"mappings":"AACA,SAASA,MAAT,QAAuB,UAAvB;AAEA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,QAAQ,GAAG,YAA2B;AACzC,QAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACI,GAAP,CAAW,aAAX,CAAvB;AACA,SAAOH,UAAU,CAACE,QAAQ,CAACE,IAAV,CAAjB;AACF,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAOC,OAAP,IAA8B;AAC3C,QAAMP,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BD,OAA3B,CAAN;AACF,CAFD;;AAIA,MAAME,UAAU,GAAG,MAAMC,EAAN,IAAmB;AACnC,QAAMC,OAAO,GAAG,MAAMT,QAAQ,EAA9B;AACA,QAAMU,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWL,EAA/B,CAArB;AACA,QAAMV,MAAM,CAACgB,MAAP,CAAe,SAAQJ,YAAT,aAASA,YAAT,uBAASA,YAAY,CAAEG,IAAK,OAA1C,CAAN;AACF,CAJD;;AAKA,OAAO,MAAME,QAAQ,GAAG;AAAEX,EAAAA,OAAF;AAAWJ,EAAAA,QAAX;AAAqBO,EAAAA;AAArB,CAAjB","sourcesContent":["import { AddUserType } from \"../types/models\"\r\nimport { api_DB } from \"../utils\"\r\nimport { User } from \"../types/models\"\r\nimport { mapToArray } from \"../helpers\"\r\n\r\nconst getUsers = async ():Promise<User[]> =>{\r\n   const response = await api_DB.get('/users.json');\r\n   return mapToArray(response.data);\r\n}\r\n\r\nconst addUser = async (payload:AddUserType) =>{\r\n   await api_DB.post('/users.json', payload)\r\n}\r\n\r\nconst deleteUser = async(id:string) =>{\r\n   const usersDB = await getUsers();\r\n   const userToDelete = usersDB.find((u) => u.idDB === id);\r\n   await api_DB.delete(`users/${userToDelete?.idDB}.json`);  \r\n}\r\nexport const usersApi = { addUser, getUsers, deleteUser }"]},"metadata":{},"sourceType":"module"}